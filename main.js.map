{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/drag-drop.directive.ts","webpack:///./src/app/image-storage.service.ts","webpack:///./src/app/load-images/load-images.component.css","webpack:///./src/app/load-images/load-images.component.html","webpack:///./src/app/load-images/load-images.component.ts","webpack:///./src/app/pixelization/pixelization.component.css","webpack:///./src/app/pixelization/pixelization.component.html","webpack:///./src/app/pixelization/pixelization.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/util/recursive_grid.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\\r\\n.bg {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.header {\\r\\n    width: 100%;\\r\\n    height: 24pt;\\r\\n    background: #9c8fb8;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n    display: flex;\\r\\n}\"","module.exports = \"<div id=\\\"bg\\\">\\r\\n  <div class=\\\"header text\\\">\\r\\n    Image guessing game\\r\\n  </div>\\r\\n  <div>\\r\\n    <app-load-images id=\\\"load-images\\\" *ngIf=\\\"!imageStorageService.hasImagesLoaded\\\"></app-load-images>\\r\\n    <app-pixelization id=\\\"pixelization\\\" #pixelization *ngIf=\\\"imageStorageService.hasImagesLoaded\\\" class=\\\"flex\\\"></app-pixelization>\\r\\n  </div>\\r\\n</div>\"","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\nimport { PixelizationComponent } from './pixelization/pixelization.component';\r\nimport { ImageStorageService } from './image-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n  title = 'app';\r\n\r\n  @ViewChild(\"pixelization\")\r\n  private _pixelization: PixelizationComponent;\r\n\r\n  private _currentImageIndex: number = 0;\r\n\r\n  constructor(public imageStorageService: ImageStorageService) {\r\n    imageStorageService.onImagesLoaded.subscribe((loadedImages) => {\r\n      this._currentImageIndex = -1;\r\n      // this._pixelization.setImage(loadedImages[0].image);\r\n      // this._pixelization.startPixelization();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    document.onkeyup = (evt) => {\r\n      if (evt.key !== ' ') return;\r\n      if (!this.imageStorageService.hasImagesLoaded) return;\r\n\r\n      if (this._pixelization.isRunning()) {\r\n        this._pixelization.showSolution();\r\n      } else {\r\n        //Show next image or done screen\r\n        if (this._currentImageIndex < (this.imageStorageService.images.length - 1)) {\r\n          this.showNextImage();\r\n        } else {\r\n          console.log('Done');\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private showNextImage() {\r\n    this._currentImageIndex += 1;\r\n    this._pixelization.setImage(this.imageStorageService.images[this._currentImageIndex].image);\r\n    this._pixelization.startPixelization();\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\nimport { PixelizationComponent } from './pixelization/pixelization.component';\nimport { LoadImagesComponent } from './load-images/load-images.component';\nimport { DragDropDirective } from './drag-drop.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PixelizationComponent,\r\n    LoadImagesComponent,\r\n    DragDropDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, Output, Input, EventEmitter, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appDragDrop]'\n})\nexport class DragDropDirective {\n\n  @Output() onFileDropped = new EventEmitter<any>();\n\n  @HostBinding('style.background-color') private background = '#f5fcff'\n  @HostBinding('style.opacity') private opacity = '1'\n\n  //Dragover listener\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#9ecbec';\n    this.opacity = '0.8'\n  }\n\n  //Dragleave listener\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#f5fcff'\n    this.opacity = '1'\n  }\n\n  //Drop listener\n  @HostListener('drop', ['$event']) public ondrop(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#f5fcff'\n    this.opacity = '1'\n    let files = evt.dataTransfer.files;\n    if (files.length > 0) {\n      this.onFileDropped.emit(files)\n    }\n  }\n\n}","import { Injectable, EventEmitter } from '@angular/core';\n\nimport * as THREE from \"three\";\n\nexport interface ImageInfo {\n  name: string,\n  url: string,\n  data: Blob\n}\n\nexport interface LoadedImage {\n  name: string,\n  image: THREE.Texture\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageStorageService {\n\n  private readonly ALLOWED_FILE_TYPES = [\".jpg\", \".jpeg\", \".png\"];\n\n  private _images: LoadedImage[] = [];\n\n  public get images(): LoadedImage[] {\n    return this._images;\n  }\n\n  onImagesLoaded: EventEmitter<LoadedImage[]> = new EventEmitter();\n\n  public get hasImagesLoaded(): boolean {\n    return this._images.length > 0;\n  }\n\n  constructor() { }\n\n  public loadImages(images: ImageInfo[]): Promise<LoadedImage[]> {\n    this._images = [];\n    return Promise.all(images.map((val, idx) => {\n      if (!this.isValidFileType(val.url)) {\n        return Promise.reject(`Unsupported image file type, must be one of [${this.ALLOWED_FILE_TYPES.reduce((accum, cur) => accum + \" \" + cur)}]`);\n      }\n      this._images.push({\n        name: val.name,\n        image: undefined\n      });\n      return this.tryLoadImage(val, idx);\n    })).then(images => {\n      this.onImagesLoaded.emit(images);\n      return images;\n    });\n  }\n\n  private tryLoadImage(image: ImageInfo, index: number): Promise<LoadedImage> {\n    console.log(`Trying to load image ${image.url}`);\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      //TODO Handle failure\n      reader.addEventListener('load', (event: any) => {\n\n        const texture = new THREE.TextureLoader().load('assets/dummy.jpg', (tex) => {\n          tex.image.src = event.target.result;\n          tex.needsUpdate = true;\n\n          this._images[index].image = tex;\n\n          resolve(this._images[index]);\n        }, () => { }, (err) => {\n          console.log(err);\n        });\n        texture.minFilter = THREE.NearestFilter;\n        texture.magFilter = THREE.NearestFilter;\n\n      }, false);\n      reader.addEventListener('error', (err) => {\n        console.error(err);\n      });\n      reader.readAsDataURL(image.data);\n    });\n  }\n\n  private isValidFileType(url: string): boolean {\n    return this.ALLOWED_FILE_TYPES.some((extension) => {\n      return url.toLowerCase().endsWith(extension);\n    });\n  }\n\n}\n","module.exports = \".upload-file {\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100px;\\r\\n    background-position: center;\\r\\n    height: 200px;\\r\\n    width: 80%;\\r\\n    margin: 20px auto;\\r\\n    border: 2px dashed #4f3b79;\\r\\n    border-radius: 10px;\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n}\\r\\n\\r\\n.centered {\\r\\n    margin: auto\\r\\n}\\r\\n\\r\\n.material-icons {\\r\\n    font-family: 'Material Icons';\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-size: 92pt;  /* Preferred icon size */\\r\\n  display: inline-block;\\r\\n  line-height: 1;\\r\\n  text-transform: none;\\r\\n  letter-spacing: normal;\\r\\n  word-wrap: normal;\\r\\n  white-space: nowrap;\\r\\n  direction: ltr;\\r\\n\\r\\n  /* Support for all WebKit browsers. */\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  /* Support for Safari and Chrome. */\\r\\n  text-rendering: optimizeLegibility;\\r\\n\\r\\n  /* Support for Firefox. */\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n\\r\\n  /* Support for IE. */\\r\\n  -webkit-font-feature-settings: 'liga';\\r\\n          font-feature-settings: 'liga';\\r\\n\\r\\n  color: #4f3b79;\\r\\n}\\r\\n\\r\\n#header-text {\\r\\n    text-align: center;\\r\\n    margin: 12pt;\\r\\n    color: #4f3b79;\\r\\n}\"","module.exports = \"<div class=\\\"upload-file\\\" (click)=\\\"fileInput.click()\\\" appDragDrop (onFileDropped)=\\\"uploadFile($event)\\\">\\n  <b id=\\\"header-text\\\" class=\\\"text\\\">Upload images</b>\\n  <i class=\\\"material-icons centered\\\">cloud_upload</i>\\n  <input hidden type=\\\"file\\\" #fileInput (change)=\\\"uploadFile($event.target.files)\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ImageStorageService } from '../image-storage.service';\n\n@Component({\n  selector: 'app-load-images',\n  templateUrl: './load-images.component.html',\n  styleUrls: ['./load-images.component.css']\n})\nexport class LoadImagesComponent implements OnInit {\n\n  constructor(private imageStorageService: ImageStorageService) { }\n\n  ngOnInit() {\n  }\n\n  uploadFile(event) {\n    const images = Array.from(event).map((e: any) => {\n      const url = e.name;\n      //Absurd regex pulled from stackoverflow that should trim the file extension...\n      const imageName = url.replace(/\\.[^/.]+$/, \"\");\n      return {\n        name: imageName,\n        url: url,\n        data: e\n      };\n    });\n\n    this.imageStorageService.loadImages(images);\n  }\n\n}\n","module.exports = \".centered {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n#main-canvas{\\r\\n    margin: 12px;\\r\\n}\"","module.exports = \"<div class=\\\"centered\\\">\\r\\n    <canvas id=\\\"main-canvas\\\" #mainCanvas></canvas>\\r\\n</div>\"","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\nimport * as THREE from \"three\";\nimport { RecursiveGrid } from 'src/util/recursive_grid';\n\nenum State {\n  ShowPixelized,\n  ShowSolution\n}\n\n@Component({\n  selector: 'app-pixelization',\n  templateUrl: './pixelization.component.html',\n  styleUrls: ['./pixelization.component.css']\n})\nexport class PixelizationComponent implements AfterViewInit {\n\n  @ViewChild('mainCanvas')\n  private _mainCanvas: ElementRef;\n\n  private _renderer: THREE.WebGLRenderer;\n  private _scene: THREE.Scene;\n  private _camera: THREE.Camera;\n\n  private _imageMesh: THREE.Mesh;\n\n  private _pixelizeMaterial: THREE.ShaderMaterial;\n  private _regularMaterial: THREE.ShaderMaterial;\n\n  private _samplingMap: THREE.Texture;\n\n  private _samplingGrid: RecursiveGrid;\n\n  private _state: State = undefined;\n\n  private readonly SAMPLE_IMAGE_RESOLUTION = 256;\n  private readonly UPDATE_INTERVAL = 20; //ms\n\n  ngAfterViewInit(): void {\n\n    var context = this._mainCanvas.nativeElement.getContext('webgl2', { alpha: false });\n\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this._mainCanvas.nativeElement,\n      context: context\n    } as any);\n    this._renderer.setSize(512, 512);\n\n    this._camera = new THREE.OrthographicCamera(-1, 1, 1, -1, -1, 1);\n    this._scene = new THREE.Scene();\n\n    const positions = new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0]);\n    const uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    const indices = [0, 1, 2, 0, 2, 3];\n\n    const geo = new THREE.BufferGeometry();\n    geo.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    geo.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n    geo.setIndex(indices);\n\n    this._imageMesh = new THREE.Mesh(geo);\n    this._scene.add(this._imageMesh);\n\n    this._samplingGrid = new RecursiveGrid(this.SAMPLE_IMAGE_RESOLUTION);\n    this._samplingMap = new THREE.DataTexture(this._samplingGrid.data, this.SAMPLE_IMAGE_RESOLUTION, this.SAMPLE_IMAGE_RESOLUTION, THREE.AlphaFormat, THREE.UnsignedByteType);\n    this._samplingMap.minFilter = THREE.LinearFilter;\n    this._samplingMap.magFilter = THREE.LinearFilter;\n    this.resetSamplingMap();\n\n    this._createPixelizeMaterial();\n    this._createRegularMaterial();\n\n    this.render();\n  }\n\n  setImage(image: THREE.Texture) {\n    this._renderer.setSize(image.image.width, image.image.height);\n    this._pixelizeMaterial.uniforms[\"tex\"].value = image;\n    this._regularMaterial.uniforms[\"tex\"].value = image;\n  }\n\n  startPixelization() {\n    console.log('Starting pixelization!');\n    this.resetSamplingMap();\n\n    this.setState(State.ShowPixelized);\n\n    this.updateLoop();\n  }\n\n  showSolution() {\n    this.setState(State.ShowSolution);\n  }\n\n  public isRunning() {\n    return this._state == State.ShowPixelized;\n  }\n\n  private setState(state: State) {\n    if (state == this._state) return;\n\n    this._state = state;\n    switch (state) {\n      case State.ShowPixelized:\n        this._imageMesh.material = this._pixelizeMaterial;\n        break;\n      case State.ShowSolution:\n        this._imageMesh.material = this._regularMaterial;\n        break;\n    }\n  }\n\n  private render() {\n    requestAnimationFrame(() => this.render());\n    this._renderer.render(this._scene, this._camera);\n  }\n\n  private updateLoop() {\n    if (this._state == State.ShowSolution) return;\n\n    this._samplingGrid.refineOne();\n    this._samplingMap.needsUpdate = true;\n\n    setTimeout(() => {\n      this.updateLoop();\n    }, this.UPDATE_INTERVAL);\n  }\n\n  private resetSamplingMap() {\n    this._samplingGrid.reset();\n    this._samplingMap.needsUpdate = true;\n  }\n\n  private _createPixelizeMaterial() {\n    const vertSource = `\n\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = vec4(position, 1.0);\n    }\n  `;\n\n    //It would be nice to use the mipmaps for pixelization, however automatic mipmap\n    //creation only works on power-of-two textures :( Leaving this code in as a comment\n    //if I ever get around to implementing manual mipmap creation\n\n    //   const fragSourceWithMipmaps = `\n    //   uniform sampler2D tex;\n    //   uniform sampler2D samplingMap;\n\n    //   varying vec2 vUv;\n\n    //   void main() {\n    //     float mipmapLevel = texture2D(samplingMap, vUv).a * 256.0;        \n    //     float samplingFactor = pow(2.0, mipmapLevel);\n    //     int uvX = int(floor(vUv.x * 512.0 / samplingFactor));\n    //     int uvY = int(floor(vUv.y * 512.0 / samplingFactor));\n    //     gl_FragColor = texelFetch(tex, ivec2(uvX, uvY), int(mipmapLevel));\n    //   }\n    // `;\n\n    const fragSource = `\n    uniform sampler2D tex;\n    uniform sampler2D samplingMap;\n\n    varying vec2 vUv;\n\n    void main() {\n      float mipmapLevel = texture2D(samplingMap, vUv).a * 256.0;        \n      float samplingFactor = pow(2.0, mipmapLevel);\n      float scaledU = floor(vUv.x * 512.0 / samplingFactor) * (samplingFactor / 512.0);\n      float scaledV = floor(vUv.y * 512.0 / samplingFactor) * (samplingFactor / 512.0);\n      gl_FragColor = texture2D(tex, vec2(scaledU, scaledV));\n    }\n  `;\n\n    this._pixelizeMaterial = new THREE.ShaderMaterial({\n      vertexShader: vertSource,\n      fragmentShader: fragSource,\n      uniforms: {\n        'tex': { value: null },\n        'samplingMap': { value: null }\n      },\n      name: \"PixelizeMaterial\"\n    });\n\n    this._pixelizeMaterial.uniforms['samplingMap'].value = this._samplingMap;\n  }\n\n  private _createRegularMaterial() {\n    const vertSource = `\n\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = vec4(position, 1.0);\n    }\n  `;\n\n    const fragSource = `\n    uniform sampler2D tex;\n\n    varying vec2 vUv;\n\n    void main() {\n      gl_FragColor = texture2D(tex, vUv);\n    }\n  `;\n\n    this._regularMaterial = new THREE.ShaderMaterial({\n      vertexShader: vertSource,\n      fragmentShader: fragSource,\n      uniforms: {\n        'tex': { value: null }\n      },\n      name: \"RegularMaterial\"\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import * as isPOT from \"is-power-of-two\";\r\n\r\ninterface Extent2D {\r\n    x: number,\r\n    y: number,\r\n    sidelength: number\r\n}\r\n\r\nclass QuadtreeNode {\r\n    public children: QuadtreeNode[];\r\n\r\n    public get level(): number {\r\n        return this._level;\r\n    }\r\n\r\n    public get extent(): Extent2D {\r\n        return this._extent;\r\n    }\r\n\r\n    constructor(private _level: number, private _extent: Extent2D) {\r\n        this.children = undefined;\r\n    }\r\n\r\n    public isLeaf(): boolean {\r\n        return this.children == undefined;\r\n    }\r\n\r\n    public isInterior(): boolean {\r\n        return !this.isLeaf();\r\n    }\r\n\r\n    public isFullyRefined(): boolean {\r\n        return this._extent.sidelength == 1;\r\n    }\r\n\r\n    public convertToInterior(): void {\r\n        if (!this.isLeaf()) throw new Error(\"Can't call makeInterior on a node that is already an interior node!\");\r\n\r\n        const childSidelength = this._extent.sidelength / 2;\r\n\r\n        this.children = [\r\n            new QuadtreeNode(this._level + 1, {\r\n                x: this._extent.x,\r\n                y: this._extent.y,\r\n                sidelength: childSidelength\r\n            }),\r\n            new QuadtreeNode(this._level + 1, {\r\n                x: this._extent.x + childSidelength,\r\n                y: this._extent.y,\r\n                sidelength: childSidelength\r\n            }),\r\n            new QuadtreeNode(this._level + 1, {\r\n                x: this._extent.x,\r\n                y: this._extent.y + childSidelength,\r\n                sidelength: childSidelength\r\n            }),\r\n            new QuadtreeNode(this._level + 1, {\r\n                x: this._extent.x + childSidelength,\r\n                y: this._extent.y + childSidelength,\r\n                sidelength: childSidelength\r\n            })\r\n        ];\r\n    }\r\n\r\n}\r\n\r\nexport interface RefineInfo {\r\n    refinedLevel: number,\r\n    pixelsRefined: number\r\n}\r\n\r\n/**\r\n * This is a 2D grid of pixels that represents the 'pixelization' of an image. This \r\n * is done by assigning each pixe a value that corresponds to the mipmap level of the\r\n * image to sample from. It starts out with the smallest mipmap level for each pixel\r\n * and can be refined dynamically\r\n */\r\nexport class RecursiveGrid {\r\n\r\n    /**\r\n     * Stores the mipmap levels for each pixel\r\n     */\r\n    private _data: Uint8Array;\r\n    private _maxMipmapLevel: number;\r\n\r\n    private _quadtree: QuadtreeNode;\r\n    private _leafNodes: Set<QuadtreeNode> = new Set<QuadtreeNode>();\r\n\r\n    public get data(): Uint8Array {\r\n        return this._data;\r\n    }\r\n\r\n    constructor(private sidelength: number) {\r\n        if (!isPOT(sidelength)) throw new Error(\"Sidelength must be a power of two!\");\r\n\r\n        this._maxMipmapLevel = Math.log2(this.sidelength);\r\n\r\n        this._data = new Uint8Array(sidelength * sidelength);\r\n        this._data.fill(this._maxMipmapLevel);\r\n\r\n        console.log(`Maximum mipmap level: ${this._maxMipmapLevel}`);\r\n\r\n        this._quadtree = new QuadtreeNode(0, {\r\n            x: 0,\r\n            y: 0,\r\n            sidelength: sidelength\r\n        });\r\n        this._leafNodes.add(this._quadtree);\r\n    }\r\n\r\n    public refineOne(): RefineInfo {\r\n        const node = this._getRandomLeafNode();\r\n        if (node == undefined) return undefined;\r\n        if (node.isInterior()) throw new Error(\"Node should not be interior node!\");\r\n\r\n        let expectedVal = this._maxMipmapLevel - node.level;\r\n\r\n        for (let y = node.extent.y; y < node.extent.y + node.extent.sidelength; ++y) {\r\n            for (let x = node.extent.x; x < node.extent.x + node.extent.sidelength; ++x) {\r\n                const idx1D = (y * this.sidelength) + x;\r\n                this.data[idx1D] -= 1;\r\n            }\r\n        }\r\n\r\n        node.convertToInterior();\r\n        this._leafNodes.delete(node);\r\n        if (!node.isFullyRefined()) {\r\n            node.children.forEach(childNode => this._leafNodes.add(childNode));\r\n        }\r\n\r\n        return {\r\n            refinedLevel: node.level,\r\n            pixelsRefined: node.extent.sidelength * node.extent.sidelength\r\n        };\r\n    }\r\n\r\n    public reset(): void {\r\n        this._data.fill(this._maxMipmapLevel);\r\n\r\n        this._quadtree = new QuadtreeNode(0, {\r\n            x: 0,\r\n            y: 0,\r\n            sidelength: this.sidelength\r\n        });\r\n        this._leafNodes.clear();\r\n        this._leafNodes.add(this._quadtree);\r\n    }\r\n\r\n    private _getRandomLeafNode(): QuadtreeNode {\r\n        if (this._leafNodes.size == 0) return undefined;\r\n\r\n        // Weight nodes by their area so that larger nodes have a higher chance\r\n        // of being selected. We can do this by using the roulette wheel selection\r\n        // algorithm\r\n\r\n        const nodeWeight = (node: QuadtreeNode) => {\r\n            return node.extent.sidelength * node.extent.sidelength;\r\n        };\r\n\r\n        const leafNodesAsArray = Array.from(this._leafNodes);\r\n        const leafNodeWeights = leafNodesAsArray.map(nodeWeight);\r\n        const totalWeight = leafNodeWeights.reduce((accum, weight) => accum + weight);\r\n\r\n        const rndWeight = Math.random() * totalWeight;\r\n\r\n        let partialSum = 0;\r\n        for (let idx = 0; idx < leafNodeWeights.length; ++idx) {\r\n            let weightEnd = partialSum + leafNodeWeights[idx];\r\n            partialSum = weightEnd;\r\n            if (rndWeight < weightEnd) return leafNodesAsArray[idx];\r\n        }\r\n\r\n        return leafNodesAsArray[leafNodesAsArray.length - 1];\r\n    }\r\n\r\n}"],"sourceRoot":""}